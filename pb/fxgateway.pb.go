// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fxgateway.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_fxgateway_77d9d85e9aaf37f1, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Message struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_fxgateway_77d9d85e9aaf37f1, []int{1}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type Messages struct {
	Output               []byte   `protobuf:"bytes,1,opt,name=Output,proto3" json:"Output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Messages) Reset()         { *m = Messages{} }
func (m *Messages) String() string { return proto.CompactTextString(m) }
func (*Messages) ProtoMessage()    {}
func (*Messages) Descriptor() ([]byte, []int) {
	return fileDescriptor_fxgateway_77d9d85e9aaf37f1, []int{2}
}
func (m *Messages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Messages.Unmarshal(m, b)
}
func (m *Messages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Messages.Marshal(b, m, deterministic)
}
func (dst *Messages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Messages.Merge(dst, src)
}
func (m *Messages) XXX_Size() int {
	return xxx_messageInfo_Messages.Size(m)
}
func (m *Messages) XXX_DiscardUnknown() {
	xxx_messageInfo_Messages.DiscardUnknown(m)
}

var xxx_messageInfo_Messages proto.InternalMessageInfo

func (m *Messages) GetOutput() []byte {
	if m != nil {
		return m.Output
	}
	return nil
}

type TokenRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenRequest) Reset()         { *m = TokenRequest{} }
func (m *TokenRequest) String() string { return proto.CompactTextString(m) }
func (*TokenRequest) ProtoMessage()    {}
func (*TokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fxgateway_77d9d85e9aaf37f1, []int{3}
}
func (m *TokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenRequest.Unmarshal(m, b)
}
func (m *TokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenRequest.Marshal(b, m, deterministic)
}
func (dst *TokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenRequest.Merge(dst, src)
}
func (m *TokenRequest) XXX_Size() int {
	return xxx_messageInfo_TokenRequest.Size(m)
}
func (m *TokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TokenRequest proto.InternalMessageInfo

func (m *TokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type CreateFunctionRequest struct {
	Service              string             `protobuf:"bytes,1,opt,name=Service,proto3" json:"Service,omitempty"`
	Image                string             `protobuf:"bytes,2,opt,name=Image,proto3" json:"Image,omitempty"`
	EnvVars              map[string]string  `protobuf:"bytes,3,rep,name=EnvVars,proto3" json:"EnvVars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels               map[string]string  `protobuf:"bytes,4,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations          map[string]string  `protobuf:"bytes,5,rep,name=Annotations,proto3" json:"Annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Constraints          []string           `protobuf:"bytes,6,rep,name=Constraints,proto3" json:"Constraints,omitempty"`
	Secrets              []string           `protobuf:"bytes,7,rep,name=Secrets,proto3" json:"Secrets,omitempty"`
	RegistryAuth         string             `protobuf:"bytes,8,opt,name=RegistryAuth,proto3" json:"RegistryAuth,omitempty"`
	Limits               *FunctionResources `protobuf:"bytes,9,opt,name=Limits,proto3" json:"Limits,omitempty"`
	Requests             *FunctionResources `protobuf:"bytes,10,opt,name=Requests,proto3" json:"Requests,omitempty"`
	MinReplicas          int32              `protobuf:"varint,11,opt,name=MinReplicas,proto3" json:"MinReplicas,omitempty"`
	MaxReplicas          int32              `protobuf:"varint,12,opt,name=MaxReplicas,proto3" json:"MaxReplicas,omitempty"`
	Token                string             `protobuf:"bytes,13,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateFunctionRequest) Reset()         { *m = CreateFunctionRequest{} }
func (m *CreateFunctionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateFunctionRequest) ProtoMessage()    {}
func (*CreateFunctionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fxgateway_77d9d85e9aaf37f1, []int{4}
}
func (m *CreateFunctionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateFunctionRequest.Unmarshal(m, b)
}
func (m *CreateFunctionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateFunctionRequest.Marshal(b, m, deterministic)
}
func (dst *CreateFunctionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateFunctionRequest.Merge(dst, src)
}
func (m *CreateFunctionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateFunctionRequest.Size(m)
}
func (m *CreateFunctionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateFunctionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateFunctionRequest proto.InternalMessageInfo

func (m *CreateFunctionRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *CreateFunctionRequest) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *CreateFunctionRequest) GetEnvVars() map[string]string {
	if m != nil {
		return m.EnvVars
	}
	return nil
}

func (m *CreateFunctionRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateFunctionRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *CreateFunctionRequest) GetConstraints() []string {
	if m != nil {
		return m.Constraints
	}
	return nil
}

func (m *CreateFunctionRequest) GetSecrets() []string {
	if m != nil {
		return m.Secrets
	}
	return nil
}

func (m *CreateFunctionRequest) GetRegistryAuth() string {
	if m != nil {
		return m.RegistryAuth
	}
	return ""
}

func (m *CreateFunctionRequest) GetLimits() *FunctionResources {
	if m != nil {
		return m.Limits
	}
	return nil
}

func (m *CreateFunctionRequest) GetRequests() *FunctionResources {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *CreateFunctionRequest) GetMinReplicas() int32 {
	if m != nil {
		return m.MinReplicas
	}
	return 0
}

func (m *CreateFunctionRequest) GetMaxReplicas() int32 {
	if m != nil {
		return m.MaxReplicas
	}
	return 0
}

func (m *CreateFunctionRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type CreateNamespaceRequest struct {
	NamespaceName        string   `protobuf:"bytes,1,opt,name=NamespaceName,proto3" json:"NamespaceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNamespaceRequest) Reset()         { *m = CreateNamespaceRequest{} }
func (m *CreateNamespaceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceRequest) ProtoMessage()    {}
func (*CreateNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fxgateway_77d9d85e9aaf37f1, []int{5}
}
func (m *CreateNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceRequest.Unmarshal(m, b)
}
func (m *CreateNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceRequest.Marshal(b, m, deterministic)
}
func (dst *CreateNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceRequest.Merge(dst, src)
}
func (m *CreateNamespaceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceRequest.Size(m)
}
func (m *CreateNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceRequest proto.InternalMessageInfo

func (m *CreateNamespaceRequest) GetNamespaceName() string {
	if m != nil {
		return m.NamespaceName
	}
	return ""
}

type IDERequest struct {
	Member               string   `protobuf:"bytes,1,opt,name=Member,proto3" json:"Member,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDERequest) Reset()         { *m = IDERequest{} }
func (m *IDERequest) String() string { return proto.CompactTextString(m) }
func (*IDERequest) ProtoMessage()    {}
func (*IDERequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fxgateway_77d9d85e9aaf37f1, []int{6}
}
func (m *IDERequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDERequest.Unmarshal(m, b)
}
func (m *IDERequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDERequest.Marshal(b, m, deterministic)
}
func (dst *IDERequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDERequest.Merge(dst, src)
}
func (m *IDERequest) XXX_Size() int {
	return xxx_messageInfo_IDERequest.Size(m)
}
func (m *IDERequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IDERequest.DiscardUnknown(m)
}

var xxx_messageInfo_IDERequest proto.InternalMessageInfo

func (m *IDERequest) GetMember() string {
	if m != nil {
		return m.Member
	}
	return ""
}

type DeleteFunctionRequest struct {
	FunctionName         string   `protobuf:"bytes,1,opt,name=FunctionName,proto3" json:"FunctionName,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFunctionRequest) Reset()         { *m = DeleteFunctionRequest{} }
func (m *DeleteFunctionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteFunctionRequest) ProtoMessage()    {}
func (*DeleteFunctionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fxgateway_77d9d85e9aaf37f1, []int{7}
}
func (m *DeleteFunctionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFunctionRequest.Unmarshal(m, b)
}
func (m *DeleteFunctionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFunctionRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteFunctionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFunctionRequest.Merge(dst, src)
}
func (m *DeleteFunctionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteFunctionRequest.Size(m)
}
func (m *DeleteFunctionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFunctionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFunctionRequest proto.InternalMessageInfo

func (m *DeleteFunctionRequest) GetFunctionName() string {
	if m != nil {
		return m.FunctionName
	}
	return ""
}

func (m *DeleteFunctionRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ScaleServiceRequest struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=ServiceName,proto3" json:"ServiceName,omitempty"`
	Replicas             uint64   `protobuf:"varint,2,opt,name=Replicas,proto3" json:"Replicas,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScaleServiceRequest) Reset()         { *m = ScaleServiceRequest{} }
func (m *ScaleServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ScaleServiceRequest) ProtoMessage()    {}
func (*ScaleServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fxgateway_77d9d85e9aaf37f1, []int{8}
}
func (m *ScaleServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScaleServiceRequest.Unmarshal(m, b)
}
func (m *ScaleServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScaleServiceRequest.Marshal(b, m, deterministic)
}
func (dst *ScaleServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScaleServiceRequest.Merge(dst, src)
}
func (m *ScaleServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ScaleServiceRequest.Size(m)
}
func (m *ScaleServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScaleServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScaleServiceRequest proto.InternalMessageInfo

func (m *ScaleServiceRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ScaleServiceRequest) GetReplicas() uint64 {
	if m != nil {
		return m.Replicas
	}
	return 0
}

func (m *ScaleServiceRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type InvokeServiceRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=Service,proto3" json:"Service,omitempty"`
	Input                []byte   `protobuf:"bytes,2,opt,name=Input,proto3" json:"Input,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvokeServiceRequest) Reset()         { *m = InvokeServiceRequest{} }
func (m *InvokeServiceRequest) String() string { return proto.CompactTextString(m) }
func (*InvokeServiceRequest) ProtoMessage()    {}
func (*InvokeServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fxgateway_77d9d85e9aaf37f1, []int{9}
}
func (m *InvokeServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeServiceRequest.Unmarshal(m, b)
}
func (m *InvokeServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeServiceRequest.Marshal(b, m, deterministic)
}
func (dst *InvokeServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeServiceRequest.Merge(dst, src)
}
func (m *InvokeServiceRequest) XXX_Size() int {
	return xxx_messageInfo_InvokeServiceRequest.Size(m)
}
func (m *InvokeServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeServiceRequest proto.InternalMessageInfo

func (m *InvokeServiceRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *InvokeServiceRequest) GetInput() []byte {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *InvokeServiceRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type FunctionRequest struct {
	FunctionName         string   `protobuf:"bytes,1,opt,name=FunctionName,proto3" json:"FunctionName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FunctionRequest) Reset()         { *m = FunctionRequest{} }
func (m *FunctionRequest) String() string { return proto.CompactTextString(m) }
func (*FunctionRequest) ProtoMessage()    {}
func (*FunctionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fxgateway_77d9d85e9aaf37f1, []int{10}
}
func (m *FunctionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionRequest.Unmarshal(m, b)
}
func (m *FunctionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionRequest.Marshal(b, m, deterministic)
}
func (dst *FunctionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionRequest.Merge(dst, src)
}
func (m *FunctionRequest) XXX_Size() int {
	return xxx_messageInfo_FunctionRequest.Size(m)
}
func (m *FunctionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionRequest proto.InternalMessageInfo

func (m *FunctionRequest) GetFunctionName() string {
	if m != nil {
		return m.FunctionName
	}
	return ""
}

type Functions struct {
	Functions            []*Function `protobuf:"bytes,1,rep,name=Functions,proto3" json:"Functions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Functions) Reset()         { *m = Functions{} }
func (m *Functions) String() string { return proto.CompactTextString(m) }
func (*Functions) ProtoMessage()    {}
func (*Functions) Descriptor() ([]byte, []int) {
	return fileDescriptor_fxgateway_77d9d85e9aaf37f1, []int{11}
}
func (m *Functions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Functions.Unmarshal(m, b)
}
func (m *Functions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Functions.Marshal(b, m, deterministic)
}
func (dst *Functions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Functions.Merge(dst, src)
}
func (m *Functions) XXX_Size() int {
	return xxx_messageInfo_Functions.Size(m)
}
func (m *Functions) XXX_DiscardUnknown() {
	xxx_messageInfo_Functions.DiscardUnknown(m)
}

var xxx_messageInfo_Functions proto.InternalMessageInfo

func (m *Functions) GetFunctions() []*Function {
	if m != nil {
		return m.Functions
	}
	return nil
}

type Function struct {
	Name                 string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Image                string            `protobuf:"bytes,2,opt,name=Image,proto3" json:"Image,omitempty"`
	InvocationCount      uint64            `protobuf:"varint,3,opt,name=InvocationCount,proto3" json:"InvocationCount,omitempty"`
	Replicas             uint64            `protobuf:"varint,4,opt,name=Replicas,proto3" json:"Replicas,omitempty"`
	AvailableReplicas    uint64            `protobuf:"varint,5,opt,name=AvailableReplicas,proto3" json:"AvailableReplicas,omitempty"`
	Annotations          map[string]string `protobuf:"bytes,6,rep,name=Annotations,proto3" json:"Annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels               map[string]string `protobuf:"bytes,7,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Function) Reset()         { *m = Function{} }
func (m *Function) String() string { return proto.CompactTextString(m) }
func (*Function) ProtoMessage()    {}
func (*Function) Descriptor() ([]byte, []int) {
	return fileDescriptor_fxgateway_77d9d85e9aaf37f1, []int{12}
}
func (m *Function) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Function.Unmarshal(m, b)
}
func (m *Function) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Function.Marshal(b, m, deterministic)
}
func (dst *Function) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Function.Merge(dst, src)
}
func (m *Function) XXX_Size() int {
	return xxx_messageInfo_Function.Size(m)
}
func (m *Function) XXX_DiscardUnknown() {
	xxx_messageInfo_Function.DiscardUnknown(m)
}

var xxx_messageInfo_Function proto.InternalMessageInfo

func (m *Function) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Function) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Function) GetInvocationCount() uint64 {
	if m != nil {
		return m.InvocationCount
	}
	return 0
}

func (m *Function) GetReplicas() uint64 {
	if m != nil {
		return m.Replicas
	}
	return 0
}

func (m *Function) GetAvailableReplicas() uint64 {
	if m != nil {
		return m.AvailableReplicas
	}
	return 0
}

func (m *Function) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *Function) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type FunctionResources struct {
	Memory               string   `protobuf:"bytes,1,opt,name=Memory,proto3" json:"Memory,omitempty"`
	CPU                  string   `protobuf:"bytes,2,opt,name=CPU,proto3" json:"CPU,omitempty"`
	GPU                  string   `protobuf:"bytes,3,opt,name=GPU,proto3" json:"GPU,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FunctionResources) Reset()         { *m = FunctionResources{} }
func (m *FunctionResources) String() string { return proto.CompactTextString(m) }
func (*FunctionResources) ProtoMessage()    {}
func (*FunctionResources) Descriptor() ([]byte, []int) {
	return fileDescriptor_fxgateway_77d9d85e9aaf37f1, []int{13}
}
func (m *FunctionResources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionResources.Unmarshal(m, b)
}
func (m *FunctionResources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionResources.Marshal(b, m, deterministic)
}
func (dst *FunctionResources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionResources.Merge(dst, src)
}
func (m *FunctionResources) XXX_Size() int {
	return xxx_messageInfo_FunctionResources.Size(m)
}
func (m *FunctionResources) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionResources.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionResources proto.InternalMessageInfo

func (m *FunctionResources) GetMemory() string {
	if m != nil {
		return m.Memory
	}
	return ""
}

func (m *FunctionResources) GetCPU() string {
	if m != nil {
		return m.CPU
	}
	return ""
}

func (m *FunctionResources) GetGPU() string {
	if m != nil {
		return m.GPU
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "pb.Empty")
	proto.RegisterType((*Message)(nil), "pb.Message")
	proto.RegisterType((*Messages)(nil), "pb.Messages")
	proto.RegisterType((*TokenRequest)(nil), "pb.TokenRequest")
	proto.RegisterType((*CreateFunctionRequest)(nil), "pb.CreateFunctionRequest")
	proto.RegisterMapType((map[string]string)(nil), "pb.CreateFunctionRequest.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.CreateFunctionRequest.EnvVarsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.CreateFunctionRequest.LabelsEntry")
	proto.RegisterType((*CreateNamespaceRequest)(nil), "pb.CreateNamespaceRequest")
	proto.RegisterType((*IDERequest)(nil), "pb.IDERequest")
	proto.RegisterType((*DeleteFunctionRequest)(nil), "pb.DeleteFunctionRequest")
	proto.RegisterType((*ScaleServiceRequest)(nil), "pb.ScaleServiceRequest")
	proto.RegisterType((*InvokeServiceRequest)(nil), "pb.InvokeServiceRequest")
	proto.RegisterType((*FunctionRequest)(nil), "pb.FunctionRequest")
	proto.RegisterType((*Functions)(nil), "pb.Functions")
	proto.RegisterType((*Function)(nil), "pb.Function")
	proto.RegisterMapType((map[string]string)(nil), "pb.Function.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "pb.Function.LabelsEntry")
	proto.RegisterType((*FunctionResources)(nil), "pb.FunctionResources")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FxGatewayClient is the client API for FxGateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FxGatewayClient interface {
	Invoke(ctx context.Context, in *InvokeServiceRequest, opts ...grpc.CallOption) (*Message, error)
	Create(ctx context.Context, in *CreateNamespaceRequest, opts ...grpc.CallOption) (*Message, error)
	Register(ctx context.Context, in *IDERequest, opts ...grpc.CallOption) (*Message, error)
	List(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*Functions, error)
	Deploy(ctx context.Context, in *CreateFunctionRequest, opts ...grpc.CallOption) (*Message, error)
	Delete(ctx context.Context, in *DeleteFunctionRequest, opts ...grpc.CallOption) (*Message, error)
	Update(ctx context.Context, in *CreateFunctionRequest, opts ...grpc.CallOption) (*Message, error)
	GetMeta(ctx context.Context, in *FunctionRequest, opts ...grpc.CallOption) (*Function, error)
	GetLog(ctx context.Context, in *FunctionRequest, opts ...grpc.CallOption) (*Message, error)
	ReplicaUpdate(ctx context.Context, in *ScaleServiceRequest, opts ...grpc.CallOption) (*Message, error)
	Info(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Message, error)
	HealthCheck(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Message, error)
}

type fxGatewayClient struct {
	cc *grpc.ClientConn
}

func NewFxGatewayClient(cc *grpc.ClientConn) FxGatewayClient {
	return &fxGatewayClient{cc}
}

func (c *fxGatewayClient) Invoke(ctx context.Context, in *InvokeServiceRequest, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/pb.FxGateway/Invoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fxGatewayClient) Create(ctx context.Context, in *CreateNamespaceRequest, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/pb.FxGateway/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fxGatewayClient) Register(ctx context.Context, in *IDERequest, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/pb.FxGateway/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fxGatewayClient) List(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*Functions, error) {
	out := new(Functions)
	err := c.cc.Invoke(ctx, "/pb.FxGateway/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fxGatewayClient) Deploy(ctx context.Context, in *CreateFunctionRequest, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/pb.FxGateway/Deploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fxGatewayClient) Delete(ctx context.Context, in *DeleteFunctionRequest, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/pb.FxGateway/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fxGatewayClient) Update(ctx context.Context, in *CreateFunctionRequest, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/pb.FxGateway/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fxGatewayClient) GetMeta(ctx context.Context, in *FunctionRequest, opts ...grpc.CallOption) (*Function, error) {
	out := new(Function)
	err := c.cc.Invoke(ctx, "/pb.FxGateway/GetMeta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fxGatewayClient) GetLog(ctx context.Context, in *FunctionRequest, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/pb.FxGateway/GetLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fxGatewayClient) ReplicaUpdate(ctx context.Context, in *ScaleServiceRequest, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/pb.FxGateway/ReplicaUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fxGatewayClient) Info(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/pb.FxGateway/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fxGatewayClient) HealthCheck(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/pb.FxGateway/HealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FxGatewayServer is the server API for FxGateway service.
type FxGatewayServer interface {
	Invoke(context.Context, *InvokeServiceRequest) (*Message, error)
	Create(context.Context, *CreateNamespaceRequest) (*Message, error)
	Register(context.Context, *IDERequest) (*Message, error)
	List(context.Context, *TokenRequest) (*Functions, error)
	Deploy(context.Context, *CreateFunctionRequest) (*Message, error)
	Delete(context.Context, *DeleteFunctionRequest) (*Message, error)
	Update(context.Context, *CreateFunctionRequest) (*Message, error)
	GetMeta(context.Context, *FunctionRequest) (*Function, error)
	GetLog(context.Context, *FunctionRequest) (*Message, error)
	ReplicaUpdate(context.Context, *ScaleServiceRequest) (*Message, error)
	Info(context.Context, *Empty) (*Message, error)
	HealthCheck(context.Context, *Empty) (*Message, error)
}

func RegisterFxGatewayServer(s *grpc.Server, srv FxGatewayServer) {
	s.RegisterService(&_FxGateway_serviceDesc, srv)
}

func _FxGateway_Invoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FxGatewayServer).Invoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FxGateway/Invoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FxGatewayServer).Invoke(ctx, req.(*InvokeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FxGateway_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNamespaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FxGatewayServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FxGateway/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FxGatewayServer).Create(ctx, req.(*CreateNamespaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FxGateway_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IDERequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FxGatewayServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FxGateway/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FxGatewayServer).Register(ctx, req.(*IDERequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FxGateway_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FxGatewayServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FxGateway/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FxGatewayServer).List(ctx, req.(*TokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FxGateway_Deploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFunctionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FxGatewayServer).Deploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FxGateway/Deploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FxGatewayServer).Deploy(ctx, req.(*CreateFunctionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FxGateway_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFunctionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FxGatewayServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FxGateway/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FxGatewayServer).Delete(ctx, req.(*DeleteFunctionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FxGateway_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFunctionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FxGatewayServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FxGateway/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FxGatewayServer).Update(ctx, req.(*CreateFunctionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FxGateway_GetMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FunctionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FxGatewayServer).GetMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FxGateway/GetMeta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FxGatewayServer).GetMeta(ctx, req.(*FunctionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FxGateway_GetLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FunctionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FxGatewayServer).GetLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FxGateway/GetLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FxGatewayServer).GetLog(ctx, req.(*FunctionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FxGateway_ReplicaUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScaleServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FxGatewayServer).ReplicaUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FxGateway/ReplicaUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FxGatewayServer).ReplicaUpdate(ctx, req.(*ScaleServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FxGateway_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FxGatewayServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FxGateway/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FxGatewayServer).Info(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _FxGateway_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FxGatewayServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FxGateway/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FxGatewayServer).HealthCheck(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _FxGateway_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.FxGateway",
	HandlerType: (*FxGatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Invoke",
			Handler:    _FxGateway_Invoke_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _FxGateway_Create_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _FxGateway_Register_Handler,
		},
		{
			MethodName: "List",
			Handler:    _FxGateway_List_Handler,
		},
		{
			MethodName: "Deploy",
			Handler:    _FxGateway_Deploy_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _FxGateway_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _FxGateway_Update_Handler,
		},
		{
			MethodName: "GetMeta",
			Handler:    _FxGateway_GetMeta_Handler,
		},
		{
			MethodName: "GetLog",
			Handler:    _FxGateway_GetLog_Handler,
		},
		{
			MethodName: "ReplicaUpdate",
			Handler:    _FxGateway_ReplicaUpdate_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _FxGateway_Info_Handler,
		},
		{
			MethodName: "HealthCheck",
			Handler:    _FxGateway_HealthCheck_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fxgateway.proto",
}

func init() { proto.RegisterFile("fxgateway.proto", fileDescriptor_fxgateway_77d9d85e9aaf37f1) }

var fileDescriptor_fxgateway_77d9d85e9aaf37f1 = []byte{
	// 1055 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x96, 0xff, 0x72, 0xdb, 0x44,
	0x10, 0xc7, 0xc7, 0xbf, 0x64, 0x7b, 0xe5, 0xb4, 0xe9, 0x35, 0x31, 0x42, 0xa5, 0x53, 0xf7, 0x48,
	0xc0, 0x13, 0x48, 0x0c, 0x01, 0xa6, 0x90, 0x99, 0x16, 0x32, 0x49, 0x9a, 0x86, 0x49, 0x68, 0xab,
	0x12, 0x60, 0x06, 0xfe, 0x39, 0xab, 0x17, 0x47, 0x63, 0x59, 0x12, 0xba, 0xb3, 0x89, 0xc9, 0xf4,
	0x1f, 0x5e, 0x81, 0x19, 0x9e, 0x82, 0xb7, 0xe1, 0x15, 0xf8, 0x87, 0xb7, 0x60, 0x6e, 0x75, 0xb2,
	0x25, 0xc7, 0x2e, 0x13, 0xfa, 0x9f, 0x76, 0x6f, 0xbf, 0x9f, 0x5b, 0xad, 0xf6, 0xf6, 0x04, 0x37,
	0xcf, 0x2e, 0x7a, 0x4c, 0xf2, 0x5f, 0xd8, 0x78, 0x2b, 0x8a, 0x43, 0x19, 0x92, 0x62, 0xd4, 0xb5,
	0xdf, 0xe9, 0x85, 0x61, 0xcf, 0xe7, 0x1d, 0x16, 0x79, 0x1d, 0x16, 0x04, 0xa1, 0x64, 0xd2, 0x0b,
	0x03, 0x91, 0x44, 0xd0, 0x2a, 0x54, 0x0e, 0x06, 0x91, 0x1c, 0xd3, 0x3b, 0x50, 0x3d, 0xe1, 0x42,
	0xb0, 0x1e, 0x27, 0xcb, 0x50, 0x3a, 0x11, 0x3d, 0xab, 0xd0, 0x2a, 0xb4, 0xeb, 0x8e, 0x7a, 0xa4,
	0x14, 0x6a, 0x7a, 0x51, 0x90, 0x26, 0x18, 0x4f, 0x87, 0x32, 0x1a, 0x4a, 0x0c, 0x68, 0x38, 0xda,
	0xa2, 0x6b, 0xd0, 0xf8, 0x36, 0xec, 0xf3, 0xc0, 0xe1, 0x3f, 0x0f, 0xb9, 0x90, 0x64, 0x05, 0x2a,
	0x52, 0xd9, 0x9a, 0x93, 0x18, 0xf4, 0x9f, 0x0a, 0xac, 0xee, 0xc5, 0x9c, 0x49, 0xfe, 0x78, 0x18,
	0xb8, 0x2a, 0x93, 0x34, 0xde, 0x82, 0xea, 0x0b, 0x1e, 0x8f, 0x3c, 0x97, 0x6b, 0x45, 0x6a, 0x2a,
	0xd2, 0xd1, 0x80, 0xf5, 0xb8, 0x55, 0x4c, 0x48, 0x68, 0x90, 0xaf, 0xa0, 0x7a, 0x10, 0x8c, 0xbe,
	0x63, 0xb1, 0xb0, 0x4a, 0xad, 0x52, 0xdb, 0xdc, 0x7e, 0x6f, 0x2b, 0xea, 0x6e, 0xcd, 0x65, 0x6f,
	0xe9, 0xc0, 0x83, 0x40, 0xc6, 0x63, 0x27, 0x95, 0x91, 0x87, 0x60, 0x1c, 0xb3, 0x2e, 0xf7, 0x85,
	0x55, 0x46, 0xc0, 0xfa, 0x62, 0x40, 0x12, 0x97, 0xe8, 0xb5, 0x88, 0x1c, 0x83, 0xb9, 0x3b, 0xad,
	0xa7, 0x55, 0x41, 0xc6, 0xc6, 0x62, 0x46, 0x26, 0x38, 0x01, 0x65, 0xe5, 0xa4, 0x05, 0xe6, 0x5e,
	0x18, 0x08, 0x19, 0x33, 0x2f, 0x90, 0xc2, 0x32, 0x5a, 0xa5, 0x76, 0xdd, 0xc9, 0xba, 0x92, 0x02,
	0xb9, 0x31, 0x97, 0xc2, 0xaa, 0xe2, 0x6a, 0x6a, 0x12, 0x0a, 0x0d, 0x87, 0xf7, 0x3c, 0x21, 0xe3,
	0xf1, 0xee, 0x50, 0x9e, 0x5b, 0x35, 0xac, 0x53, 0xce, 0x47, 0x36, 0xc1, 0x38, 0xf6, 0x06, 0x9e,
	0x14, 0x56, 0xbd, 0x55, 0x68, 0x9b, 0xdb, 0xab, 0x2a, 0xd1, 0x69, 0x8a, 0x22, 0x1c, 0xc6, 0x2e,
	0x17, 0x8e, 0x0e, 0x22, 0x1f, 0x43, 0x4d, 0xe7, 0x2d, 0x2c, 0x78, 0x9d, 0x60, 0x12, 0xa6, 0xde,
	0xe0, 0xc4, 0x0b, 0x1c, 0x1e, 0xf9, 0x9e, 0xcb, 0x84, 0x65, 0xb6, 0x0a, 0xed, 0x8a, 0x93, 0x75,
	0x61, 0x04, 0xbb, 0x98, 0x44, 0x34, 0x74, 0xc4, 0xd4, 0x35, 0x6d, 0x9a, 0xa5, 0x4c, 0xd3, 0xd8,
	0x3b, 0xd0, 0xc8, 0x7e, 0x41, 0xd5, 0xa0, 0x7d, 0x3e, 0x4e, 0x1b, 0xb4, 0xcf, 0xc7, 0x4a, 0x37,
	0x62, 0xfe, 0x70, 0xd2, 0x22, 0x68, 0xec, 0x14, 0x3f, 0x2f, 0xd8, 0x5f, 0x80, 0x99, 0xf9, 0x78,
	0xd7, 0x92, 0x3e, 0x82, 0xe5, 0xd9, 0x6f, 0x76, 0x1d, 0x3d, 0x7d, 0x04, 0xcd, 0xa4, 0x13, 0xbe,
	0x61, 0x03, 0x2e, 0x22, 0xe6, 0xf2, 0xb4, 0xd7, 0xd7, 0x60, 0x69, 0xe2, 0x53, 0x0f, 0x9a, 0x97,
	0x77, 0xd2, 0x35, 0x80, 0xa3, 0xfd, 0x83, 0x54, 0xd3, 0x04, 0xe3, 0x84, 0x0f, 0xba, 0x3c, 0xd6,
	0xc1, 0xda, 0xa2, 0xcf, 0x61, 0x75, 0x9f, 0xfb, 0xfc, 0xea, 0x81, 0xa2, 0xd0, 0x48, 0x5d, 0x99,
	0x3d, 0x72, 0xbe, 0x69, 0xbd, 0x8b, 0xd9, 0x43, 0xea, 0xc1, 0xed, 0x17, 0x2e, 0xf3, 0xb9, 0x3e,
	0x80, 0x29, 0xb0, 0x05, 0xa6, 0xf6, 0x64, 0x78, 0x59, 0x17, 0xb1, 0x55, 0xd7, 0xe8, 0xaf, 0xab,
	0x88, 0x65, 0xa7, 0x76, 0xf5, 0xd3, 0x96, 0xb2, 0x5b, 0xfd, 0x04, 0x2b, 0x47, 0xc1, 0x28, 0xec,
	0xcf, 0xee, 0xf5, 0xfa, 0x69, 0x10, 0xa8, 0xf1, 0x53, 0xc4, 0xf1, 0x93, 0x18, 0x0b, 0xe8, 0x9f,
	0xc1, 0xcd, 0xff, 0x51, 0x15, 0xfa, 0x00, 0xea, 0xa9, 0x2d, 0xc8, 0x46, 0xc6, 0xb0, 0x0a, 0x78,
	0xc8, 0x1b, 0xb9, 0xa3, 0x30, 0x5d, 0xa6, 0x7f, 0x94, 0xa0, 0x96, 0x5a, 0x84, 0x40, 0x39, 0xb3,
	0x43, 0x39, 0xad, 0xf7, 0x9c, 0x51, 0xd6, 0x86, 0x9b, 0xaa, 0x08, 0x2e, 0x36, 0xda, 0x5e, 0x38,
	0x0c, 0x24, 0xbe, 0x46, 0xd9, 0x99, 0x75, 0xe7, 0x0a, 0x5c, 0x9e, 0x29, 0xf0, 0x87, 0x70, 0x6b,
	0x77, 0xc4, 0x3c, 0x9f, 0x75, 0x7d, 0x3e, 0x09, 0xaa, 0x60, 0xd0, 0xd5, 0x05, 0xf2, 0x65, 0x7e,
	0x7a, 0x19, 0xf8, 0x62, 0x77, 0xb3, 0x2f, 0xf6, 0x1f, 0x03, 0xeb, 0xa3, 0xc9, 0xf4, 0xac, 0xa2,
	0xd6, 0xca, 0x69, 0xe7, 0x0c, 0xcc, 0x37, 0x3d, 0x4f, 0x6f, 0x70, 0x94, 0xe9, 0x53, 0xb8, 0x75,
	0x65, 0x74, 0xe9, 0x13, 0x15, 0xc6, 0xe3, 0xcc, 0x89, 0x0a, 0x13, 0xf0, 0xde, 0xb3, 0x53, 0x0d,
	0x51, 0x8f, 0xca, 0x73, 0xf8, 0xec, 0x54, 0xf7, 0x96, 0x7a, 0xdc, 0xfe, 0xb3, 0x0a, 0xf5, 0xc7,
	0x17, 0x87, 0xc9, 0x6d, 0x4b, 0x9e, 0x83, 0x91, 0x74, 0x31, 0xc1, 0x2a, 0xcc, 0xeb, 0x68, 0xdb,
	0x54, 0x2b, 0xfa, 0x16, 0xa5, 0xad, 0xdf, 0xfe, 0xfa, 0xfb, 0xf7, 0xa2, 0x4d, 0x57, 0xf1, 0x5a,
	0xf6, 0x30, 0xbe, 0x73, 0xa9, 0x15, 0xaf, 0x76, 0x0a, 0x1b, 0xe4, 0x47, 0x30, 0x92, 0xe1, 0x41,
	0xec, 0xe9, 0x95, 0x32, 0x3b, 0x48, 0xf2, 0xd0, 0x36, 0x42, 0x29, 0xbd, 0x8b, 0x50, 0x17, 0x15,
	0x81, 0xe8, 0x5c, 0xe6, 0xa6, 0x0a, 0xc2, 0xbf, 0x56, 0x6d, 0xa4, 0x2e, 0x07, 0x1e, 0x93, 0x1b,
	0x98, 0xf1, 0x64, 0xce, 0xe4, 0x91, 0xf7, 0x11, 0x79, 0x87, 0x36, 0x11, 0x19, 0x6b, 0x4d, 0xe7,
	0x32, 0x99, 0x3d, 0xc8, 0x7a, 0x08, 0xe5, 0x63, 0x4f, 0x48, 0xb2, 0xac, 0x74, 0xd9, 0x3f, 0x00,
	0x7b, 0x29, 0xdb, 0x11, 0x82, 0xae, 0x20, 0xeb, 0x06, 0xad, 0x23, 0xcb, 0xf7, 0x84, 0x54, 0xf2,
	0x27, 0x60, 0xec, 0xf3, 0xc8, 0x0f, 0xc7, 0xe4, 0xed, 0x85, 0x57, 0x67, 0x3e, 0xa7, 0x26, 0x72,
	0x96, 0xa9, 0x89, 0x9c, 0x97, 0x28, 0x56, 0xa4, 0xef, 0x15, 0x49, 0x0d, 0xc2, 0x84, 0x34, 0x77,
	0x28, 0xe6, 0x49, 0xeb, 0x48, 0xba, 0x47, 0x6d, 0x4d, 0x52, 0x82, 0xce, 0x65, 0x76, 0x14, 0xbc,
	0xd2, 0x29, 0x9e, 0x46, 0x2f, 0x59, 0x0a, 0xbe, 0x76, 0x8a, 0x43, 0x14, 0x2b, 0xd2, 0x29, 0x54,
	0x0f, 0xb9, 0x3c, 0xe1, 0x92, 0x91, 0xdb, 0xf9, 0xeb, 0x34, 0x81, 0xe4, 0x06, 0x0b, 0x7d, 0x1f,
	0x29, 0xf7, 0xc9, 0xbd, 0x8e, 0x18, 0x0b, 0xc9, 0x07, 0x9d, 0x33, 0xbd, 0x32, 0x93, 0xa3, 0x7a,
	0xf3, 0x43, 0x2e, 0x8f, 0xc3, 0xde, 0x7c, 0x6a, 0x2e, 0xb5, 0x0f, 0x10, 0xba, 0x4e, 0xde, 0x9d,
	0x85, 0x6e, 0xfa, 0x61, 0x6f, 0x16, 0xfc, 0x03, 0x2c, 0xe9, 0x81, 0xa1, 0x0b, 0xf0, 0x96, 0x42,
	0xcd, 0xb9, 0x1b, 0xe6, 0x76, 0x8d, 0xdd, 0x4c, 0xf7, 0x10, 0x4a, 0xb1, 0x99, 0xee, 0xa4, 0x2a,
	0xf1, 0x29, 0x94, 0x8f, 0x82, 0xb3, 0x90, 0xd4, 0x95, 0x0e, 0xff, 0x40, 0xf3, 0x08, 0xdd, 0x2c,
	0xa4, 0x91, 0x22, 0x3c, 0x15, 0xfd, 0x00, 0xcc, 0x27, 0x9c, 0xf9, 0xf2, 0x7c, 0xef, 0x9c, 0xbb,
	0xfd, 0x85, 0xe2, 0x65, 0x14, 0x03, 0xa9, 0x75, 0xce, 0x31, 0xfa, 0xd7, 0xae, 0x81, 0x7f, 0xbb,
	0x9f, 0xfc, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x02, 0x40, 0x0f, 0x22, 0x0b, 0x00, 0x00,
}
